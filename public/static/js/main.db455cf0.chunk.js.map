{"version":3,"sources":["state/settings/settings.store.ts","state/settings/settings.query.ts","state/user/user.store.ts","state/user/user.query.ts","state/user/user.service.ts","state/user/user.hooks.ts","state/Request.ts","state/settings/settings.service.ts","components/Button.tsx","components/Input.tsx","components/Login.tsx","components/Navbar.tsx","state/settings/settings.hooks.ts","pages/Contact.tsx","state/files/file.store.ts","state/files/file.query.ts","state/files/file.service.ts","state/files/file.hooks.ts","pages/Dashboard.tsx","components/UploadButton.tsx","pages/Home.tsx","Router.tsx","storage.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["settingsStore","StoreConfig","name","idKey","_dec","_class","Store","constructor","super","SettingsQuery","Query","store","maxFileSizeBytes$","this","select","state","max_file_size_bytes","registerEnabled$","register_enabled","isLoading$","selectLoading","error$","selectError","settingsQuery","userStore","UserQuery","user$","isLoggedIn$","api_key","userQuery","userService","login","data","setLoading","setError","update","message","undefined","res","SendRequest","status","json","e","register","error","logout","id","username","email","is_admin","last_update","created_at","changePassword","getValue","toString","useAuthenticationState","isLoading","setIsLoading","useState","user","setUser","loggedIn","setLoggedIn","useEffect","subscriptions","subscribe","x","map","it","unsubscribe","isLoggedIn","API_URL","process","ApiKey","async","endpoint","method","body","params","url","concat","val","_ApiKey","axios","headers","err","axErr","response","Error","api","settingsService","fetchSettings","Button","props","className","small","transparent","_jsx","type","onClick","_props$onClick","call","disabled","children","BeatLoader","color","size","text","Input","_jsxs","style","width","label","htmlFor","placeholder","onChange","target","value","Login","setUsername","password","setPassword","setEmail","setType","right","top","anchorElement","innerWidth","window","bounding","getBoundingClientRect","bottom","onSubmit","event","preventDefault","showRegister","Navbar","useSettings","registerEnabled","setRegisterEnabled","maxFileSizeBytes","setMaxFileSizeBytes","loginButton","useRef","showLoginPopup","setShowLoginPopup","Link","to","activePage","ref","current","Contact","_Fragment","href","fileStore","currentPage","totalPages","files","FileQuery","files$","recentlyUploaded$","recentlyUploaded","uploadProgress$","uploadProgress","currentPage$","totalPages$","fileQuery","fileService","getFileCount","_res$json$num_count","_res$json","Math","ceil","num_count","getFiles","getNextPage","getPreviousPage","uploadFile","file","userState","fileState","formData","FormData","append","post","onUploadProgress","prog","percentage","round","loaded","total","_fileState$recentlyUp","useFileState","setFiles","setRecentlyUploaded","setUploadProgress","setCurrentPage","setTotalPages","Dashboard","history","useHistory","navState","setNavState","filesLoading","oldPassword","setOldPassword","newPassword","setNewPassword","updatePassword","new_password","onLogout","push","console","info","content","_user$email","BounceLoader","original_name","file_size","toFixed","format","Date","copyUrlToClipboard","navigator","clipboard","writeText","FaArrowLeft","FaArrowRight","copyTokenToClipboard","_user$api_key","UploadButton","_props$percentage","display","_props$onUpload","_x$target$files","onUpload","multiple","shareXTemplate","Home","downloadShareX","template","Headers","Authorization","blob","Blob","JSON","stringify","download","length","reverse","slice","copyToClipboard","split","location","host","Router","BrowserRouter","Switch","Route","path","persistState","include","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db455cf0.chunk.js","sourcesContent":["import { Store, StoreConfig } from \"@datorama/akita\";\r\nimport { Settings } from \"./settings.model\";\r\n\r\nconst CreateInitialState = () => ({});\r\n\r\n@StoreConfig({\r\n\tname: \"settings\",\r\n\tidKey: \"_id\",\r\n})\r\nexport class SettingsStore extends Store<Settings> {\r\n\tconstructor() {\r\n\t\tsuper(CreateInitialState());\r\n\t}\r\n}\r\n\r\nexport const settingsStore = new SettingsStore();\r\n","import { Query } from \"@datorama/akita\";\r\nimport { Settings } from \"./settings.model\";\r\nimport { settingsStore, SettingsStore } from \"./settings.store\";\r\n\r\nexport class SettingsQuery extends Query<Settings> {\r\n\tmaxFileSizeBytes$ = this.select((state) => state.max_file_size_bytes);\r\n\tregisterEnabled$ = this.select((state) => state.register_enabled);\r\n\r\n\tisLoading$ = this.selectLoading();\r\n\terror$ = this.selectError();\r\n\r\n\tconstructor(protected store: SettingsStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\nexport const settingsQuery = new SettingsQuery(settingsStore);\r\n","import { Store, StoreConfig } from \"@datorama/akita\";\r\nimport { User } from \"./user.model\";\r\n\r\nconst CreateInitialState = () => ({});\r\n\r\n@StoreConfig({\r\n\tname: \"user\",\r\n\tidKey: \"_id\",\r\n})\r\nexport class UserStore extends Store<User> {\r\n\tconstructor() {\r\n\t\tsuper(CreateInitialState());\r\n\t}\r\n}\r\n\r\nexport const userStore = new UserStore();\r\n","import { Query } from \"@datorama/akita\";\r\nimport { User } from \"./user.model\";\r\nimport { UserStore, userStore } from \"./user.store\";\r\n\r\nexport class UserQuery extends Query<User> {\r\n\tuser$ = this.select();\r\n\tisLoggedIn$ = this.select((state) => !!state.api_key);\r\n\tapi_key = this.select((state) => state.api_key);\r\n\r\n\tisLoading$ = this.selectLoading();\r\n\terror$ = this.selectError();\r\n\r\n\tconstructor(protected store: UserStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\nexport const userQuery = new UserQuery(userStore);\r\n","import { UserStore, userStore } from \"./user.store\";\r\nimport { PasswordUpdate, User, UserLogin, UserRegister } from \"./user.model\";\r\nimport { SendRequest } from \"../Request\";\r\n\r\nexport class UserService {\r\n\tconstructor(private store: UserStore) {}\r\n\r\n\tasync login(data: UserLogin) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\t\tthis.store.update({message: undefined});\r\n\r\n\t\ttry{\r\n\t\t\tconst res = await SendRequest<User>(\"login\", \"POST\", data);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({...res.json});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(\"Invalid username or password.\");\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tasync register(data: UserRegister) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await SendRequest<User>(\"register\", \"POST\", data);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({...res.json});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.store.update({\r\n\t\t\tid: undefined,\r\n\t\t\tusername: undefined,\r\n\t\t\temail: undefined,\r\n\t\t\tapi_key: undefined,\r\n\t\t\tis_admin: undefined,\r\n\t\t\tlast_update: undefined,\r\n\t\t\tcreated_at: undefined,\r\n\t\t\tmessage: undefined,\r\n\t\t});\r\n\t}\r\n\r\n\tasync changePassword(data: PasswordUpdate) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\t\tthis.store.update({message: undefined});\r\n\t\tconst state = this.store.getValue();\r\n\r\n\t\ttry{\r\n\t\t\tconst res = await SendRequest<PasswordUpdate>(\"change-password\", \"POST\", data, [state.id.toString()]);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\tmessage: \"Successfully updated password\",\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n}\r\n\r\nexport const userService = new UserService(userStore);\r\n","import { useEffect, useState } from \"react\";\r\nimport { User } from \"./user.model\";\r\nimport { userQuery } from \"./user.query\";\r\n\r\nexport const useAuthenticationState = (): {\r\n\terror: string;\r\n\tisLoading: boolean;\r\n\tisLoggedIn: boolean;\r\n\tuser: User | undefined;\r\n} => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [user, setUser] = useState<User>();\r\n\tconst [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst subscriptions: any[] = [\r\n\t\t\tuserQuery.isLoading$.subscribe((x) => setIsLoading(x)),\r\n\t\t\tuserQuery.error$.subscribe((x) => setError(x)),\r\n\t\t\tuserQuery.user$.subscribe((x) => setUser(x)),\r\n\t\t\tuserQuery.isLoggedIn$.subscribe((x) => setLoggedIn(x)),\r\n\t\t];\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.map((it) => it.unsubscribe());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tisLoggedIn: loggedIn,\r\n\t\tuser,\r\n\t\terror,\r\n\t\tisLoading,\r\n\t};\r\n};\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { userQuery } from \"./user\";\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nlet ApiKey: string | undefined = \"\";\r\nuserQuery.api_key.subscribe((api) => {\r\n\tApiKey = api;\r\n});\r\n\r\nexport interface ApiResponse<T> {\r\n\tstatus: number;\r\n\tjson?: T;\r\n\terror?: string;\r\n};\r\nexport type Endpoint = \r\n\t| \"upload\"\r\n\t| \"settings\"\r\n\t| \"delete\"\r\n\t| \"files\"\r\n\t| \"file-count\"\r\n\t| \"login\"\r\n\t| \"register\"\r\n\t| \"reset-token\"\r\n\t| \"change-password\";\r\nexport type Method = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\r\nexport async function SendRequest<T>(\r\n\tendpoint: Endpoint,\r\n\tmethod: Method,\r\n\tbody?: { [key: string]: any },\r\n\tparams?: [value: string],\r\n): Promise<ApiResponse<T>> {\r\n\tlet url = `${API_URL}/${endpoint}`;\r\n\tif (params !== undefined) {\r\n\t\tfor (const val of params) {\r\n\t\t\turl += `/${val}`;\r\n\t\t}\r\n\t}\r\n\r\n\tlet res: AxiosResponse;\r\n\ttry {\r\n\t\tres = await axios({\r\n\t\t\tmethod,\r\n\t\t\turl,\r\n\t\t\tdata: body,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": ApiKey ?? \"\",\r\n\t\t\t}\r\n\t\t});\r\n\t} catch (err: any) {\r\n\t\tconst axErr: AxiosError = err;\r\n\t\tif (axErr.response){\r\n\t\t\tres = axErr.response;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Request failed\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (res.status === 200){\r\n\t\treturn {\r\n\t\t\tstatus: 200,\r\n\t\t\tjson: res.data,\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tstatus: res.status,\r\n\t\t\tjson: res.data,\r\n\t\t\terror: res.data,\r\n\t\t}\r\n\t}\r\n}","import { SendRequest } from \"../Request\";\r\nimport { Settings } from \"./settings.model\";\r\nimport { settingsStore, SettingsStore } from \"./settings.store\";\r\n\r\nexport class SettingsService {\r\n\tconstructor(private store: SettingsStore) {}\r\n\r\n\tasync fetchSettings() {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\tconst res = await SendRequest<Settings>(\"settings\", \"GET\");\r\n\t\tif (res.status === 200){\r\n\t\t\tthis.store.update({...res.json});\r\n\t\t} else {\r\n\t\t\tthis.store.setError(\"Invalid username or password.\");\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n}\r\n\r\nexport const settingsService = new SettingsService(settingsStore);\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\ninterface ButtonProps {\r\n\tclassName?: string;\r\n\ttext: string;\r\n\tonClick?: () => void;\r\n\tisLoading?: boolean;\r\n\tsmall?: boolean;\r\n\ttransparent?: boolean;\r\n\ttype?: \"button\" | \"submit\" | \"reset\";\r\n}\r\n\r\nconst Button = (props: ButtonProps) => {\r\n\tlet className = \"button\";\r\n\r\n\tif (props.small) {\r\n\t\tclassName += \" button-small\";\r\n\t}\r\n\tif (props.transparent) {\r\n\t\tclassName += \" button-transparent\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button className={`${className} ${props.className}`} type={props.type} onClick={() => props.onClick?.()} disabled={props.isLoading}>\r\n\t\t\t{props.isLoading ? <BeatLoader color=\"#000000\" size={8} /> : props.text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\ninterface InputProps {\r\n\tid: string;\r\n\tplaceholder?: string;\r\n\tlabel?: string;\r\n\ttype?: \"text\" | \"password\" | \"number\" | \"email\",\r\n\tonChange?: (val: string) => void,\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst Input = (props: InputProps) => {\r\n\t\r\n\treturn (\r\n\t\t<div style={{width: \"100%\"}}>\r\n\t\t\t{props.label && <label className=\"input-label\" htmlFor={props.id}>{props.label}</label>}\r\n\t\t\t<input \r\n\t\t\t\tclassName=\"text-input\"\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tonChange={(x) => props.onChange ? props.onChange(x.target.value) : null} \r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;","import React, { FormEvent, useState } from \"react\";\r\nimport { useAuthenticationState, userService } from \"../state/user\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\nimport \"./Login.scss\";\r\n\r\ninterface LoginProps {\r\n\tanchorElement?: HTMLButtonElement | null;\r\n\tshowRegister?: boolean;\r\n\tisLoading?: boolean;\r\n\terror?: string;\r\n}\r\n\r\nconst Login = (props: LoginProps) => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [type, setType] = useState<\"login\" | \"register\"> (\"login\");\r\n\r\n\tlet right = 0;\r\n\tlet top = 0;\r\n\r\n\tif (props.anchorElement){\r\n\t\tconst { innerWidth } = window;\r\n\t\tconst bounding = props.anchorElement.getBoundingClientRect();\r\n\t\tright = innerWidth - bounding.right + 20;\r\n\t\ttop = bounding.bottom + 20;\r\n\t}\r\n\r\n\tconst onLogin = (event?: FormEvent) => {\r\n\t\tif (props.isLoading) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tevent?.preventDefault();\r\n\t\tif (type === \"login\") {\r\n\t\t\tuserService.login({ \r\n\t\t\t\tusername, \r\n\t\t\t\tpassword\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tuserService.register({ \r\n\t\t\t\tusername, \r\n\t\t\t\tpassword,\r\n\t\t\t\temail,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"login-popup\" style={{right, top}} onSubmit={onLogin}>\r\n\t\t\t<div className=\"popup-arrow\"></div>\r\n\t\t\t<label className=\"login-error\">{props.error}</label>\r\n\t\t\t<Input id={\"username\"} placeholder={\"Username\"} onChange={(val) => setUsername(val)} />\r\n\t\t\t<Input id={\"password\"} placeholder={\"Password\"} type={\"password\"} onChange={(val) => setPassword(val)} />\r\n\t\t\t{type === \"register\" \r\n\t\t\t\t? <Input id={\"email\"} placeholder={\"Email\"} type={\"email\"} onChange={(val) => setEmail(val)} /> \r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t<div className=\"login-buttons\">\r\n\t\t\t\t{props.showRegister && type === \"login\" && <Button type={\"button\"} onClick={() => setType(\"register\")} small={true} transparent={true} text={\"Create account\"}/>}\r\n\t\t\t\t{props.showRegister && type === \"register\" && <Button type={\"button\"} onClick={() => setType(\"login\")} small={true} transparent={true} text={\"Already have an account?\"}/>}\r\n\t\t\t\t<Button text={type === \"login\" ? \"Log In\" : \"Register\"} isLoading={props.isLoading} />\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSettings } from \"../state/settings\";\r\nimport { useAuthenticationState } from \"../state/user\";\r\nimport Login from \"./Login\";\r\nimport \"./Navbar.scss\";\r\n\r\ninterface NavbarProps {\r\n\tactivePage?: string;\r\n}\r\n\r\nconst Navbar = (props: NavbarProps) => {\r\n\tconst { isLoggedIn, error, isLoading } = useAuthenticationState();\r\n\tconst { register_enabled } = useSettings();\r\n\tconst loginButton = useRef<HTMLButtonElement | null>();\r\n\tconst [showLoginPopup, setShowLoginPopup] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetShowLoginPopup(false);\r\n\t}, [isLoggedIn]);\r\n\r\n\treturn (\r\n\t\t<nav className=\"nav-bar\">\r\n\t\t\t<section className=\"nav-start\">\r\n\t\t\t\t<h3 className=\"name\">tsuyu</h3>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"nav-end\">\r\n\t\t\t\t<Link to=\"\" className={props.activePage  === \"home\" ? \"nav-item active\" : \"nav-item\"}>Home</Link>\r\n\t\t\t\t<Link to=\"contact\"  className={props.activePage  === \"contact\" ? \"nav-item active\" : \"nav-item\"}>Contact</Link>\r\n\t\t\t\t{isLoggedIn ? ( \r\n\t\t\t\t\t<Link to=\"dashboard\"  className={props.activePage  === \"dashboard\" ? \"nav-item active\" : \"nav-item\"}>Dashboard</Link>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button className=\"nav-item\" onClick={() => setShowLoginPopup(!showLoginPopup)} ref={(x) => loginButton.current = x}>Log in</button>\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t\t{showLoginPopup ? (\r\n\t\t\t\t<Login anchorElement={loginButton.current} showRegister={register_enabled} error={error} isLoading={isLoading}/>\r\n\t\t\t): null}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;","import { useEffect, useState } from \"react\";\r\nimport { settingsQuery } from \"./settings.query\";\r\nimport { settingsService } from \"./settings.service\";\r\n\r\nexport const useSettings = (): {\r\n\tregister_enabled: boolean;\r\n\tmax_file_size_bytes: number;\r\n\terror: string;\r\n\tisLoading: boolean;\r\n} => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [registerEnabled, setRegisterEnabled] = useState<boolean>(false);\r\n\tconst [maxFileSizeBytes, setMaxFileSizeBytes] = useState<number>(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsettingsService.fetchSettings();\r\n\r\n\t\tconst subscriptions: any[] = [\r\n\t\t\tsettingsQuery.isLoading$.subscribe((x) => setIsLoading(x)),\r\n\t\t\tsettingsQuery.error$.subscribe((x) => setError(x)),\r\n\t\t\tsettingsQuery.registerEnabled$.subscribe((x) => setRegisterEnabled(x)),\r\n\t\t\tsettingsQuery.maxFileSizeBytes$.subscribe((x) => setMaxFileSizeBytes(x)),\r\n\t\t];\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.map((it) => it.unsubscribe());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tregister_enabled: registerEnabled,\r\n\t\tmax_file_size_bytes: maxFileSizeBytes,\r\n\t\terror,\r\n\t\tisLoading,\r\n\t};\r\n};\r\n","import React from \"react\";\r\nimport \"./Contact.scss\";\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"route\" id=\"contact\">\r\n\t\t\t\t<section className=\"contact\">\r\n\t\t\t\t\t<h1 className=\"contact-title\">Contact</h1>\r\n\t\t\t\t\t<p className=\"contact-info\">\r\n\t\t\t\t\t\tFor legal notices or takedown requests, please go contact me via <a href=\"mailto:filip.ekstrom98@gmail.com\" className=\"link\">email.</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"contact-info\">\r\n\t\t\t\t\t\tFor other questions and answers, be sure to contact me either via <a href=\"mailto:filip.ekstrom98@gmail.com\" className=\"link\">email</a> or by joining my <a href=\"https://discord.gg/roost\" className=\"link\">Discord Server.</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Contact;","import { Store, StoreConfig } from \"@datorama/akita\";\r\nimport { FileState } from \"./file.model\";\r\n\r\nconst CreateInitialState = (): FileState => ({\r\n\tcurrentPage: 1,\r\n\ttotalPages: 1,\r\n\tfiles: [],\r\n});\r\n\r\n@StoreConfig({\r\n\tname: \"files\",\r\n\tidKey: \"_id\",\r\n})\r\nexport class FileStore extends Store<FileState> {\r\n\tconstructor() {\r\n\t\tsuper(CreateInitialState());\r\n\t}\r\n}\r\n\r\nexport const fileStore = new FileStore();\r\n","import { Query } from \"@datorama/akita\";\r\nimport { FileState } from \"./file.model\";\r\nimport { fileStore, FileStore } from \"./file.store\";\r\n\r\nexport class FileQuery extends Query<FileState> {\r\n\tfiles$ = this.select((state) => state.files);\r\n\trecentlyUploaded$ = this.select((state) => state.recentlyUploaded);\r\n\tuploadProgress$ = this.select((state) => state.uploadProgress);\r\n\tcurrentPage$ = this.select((state) => state.currentPage);\r\n\ttotalPages$ = this.select((state) => state.totalPages);\r\n\r\n\tisLoading$ = this.selectLoading();\r\n\terror$ = this.selectError();\r\n\r\n\tconstructor(protected store: FileStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\nexport const fileQuery = new FileQuery(fileStore);\r\n","import { FileStore, fileStore } from \"./file.store\";\r\nimport { File as IFile, FileCount, FileState } from \"./file.model\";\r\nimport { API_URL, SendRequest } from \"../Request\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { UserStore } from \"../user\";\r\nimport { userStore } from \"../user/user.store\";\r\n\r\nexport class FileService {\r\n\tconstructor(private store: FileStore, private userStore: UserStore) {}\r\n\r\n\tasync getFileCount() {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await SendRequest<FileCount>(\"file-count\", \"GET\");\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\ttotalPages: Math.ceil((res.json?.num_count ?? 0.1) / 12),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tasync getFiles() {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\tconst state: FileState = this.store.getValue();\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await SendRequest<IFile[]>(\"files\", \"GET\", undefined, [state.currentPage.toString()]);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\tfiles: res.json,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tasync getNextPage() {\r\n\t\tconst state: FileState = this.store.getValue();\r\n\t\tif (state.currentPage >= state.totalPages){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.store.update({\r\n\t\t\tcurrentPage: state.currentPage + 1,\r\n\t\t})\r\n\t\tawait this.getFiles();\r\n\t}\r\n\r\n\tasync getPreviousPage() {\r\n\t\tconst state: FileState = this.store.getValue();\r\n\t\tif (state.currentPage <= 1){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.store.update({\r\n\t\t\tcurrentPage: state.currentPage - 1,\r\n\t\t})\r\n\t\tawait this.getFiles();\r\n\t}\r\n\r\n\tasync uploadFile(file: File) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\t\tconst userState = this.userStore.getValue();\r\n\t\tconst fileState = this.store.getValue();\r\n\r\n\t\ttry {\r\n\t\t\tlet res: AxiosResponse;\r\n\t\t\ttry {\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tformData.append(\"file\", file);\r\n\r\n\t\t\t\tres = await axios.post(\r\n\t\t\t\t\t`${API_URL}/upload`,\r\n\t\t\t\t\tformData,\r\n\t\t\t\t\t{ \r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\t\t\t\"Authorization\": userState.api_key,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonUploadProgress: (prog) => {\r\n\t\t\t\t\t\t\tconst percentage = Math.round(prog.loaded / prog.total * 100);\r\n\t\t\t\t\t\t\tthis.store.update({\r\n\t\t\t\t\t\t\t\tuploadProgress: percentage,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tconst axErr: AxiosError = err;\r\n\t\t\t\tif (axErr.response){\r\n\t\t\t\t\tres = axErr.response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Request failed\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\tuploadProgress: 0,\r\n\t\t\t\t\trecentlyUploaded: [\r\n\t\t\t\t\t\t...(fileState.recentlyUploaded ?? []),\r\n\t\t\t\t\t\tres.data,\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.data);\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n}\r\n\r\nexport const fileService = new FileService(fileStore, userStore);\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuthenticationState } from \"../user\";\r\nimport { File } from \"./file.model\";\r\nimport { fileQuery } from \"./file.query\";\r\nimport { fileService } from \"./file.service\";\r\n\r\nexport const useFileState = (): {\r\n\terror: string;\r\n\tisLoading: boolean;\r\n\tfiles: File[],\r\n\trecentlyUploaded: string[];\r\n\tuploadProgress: number;\r\n\tcurrentPage: number,\r\n\ttotalPages: number,\r\n} => {\r\n\tconst { isLoggedIn } = useAuthenticationState();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [files, setFiles] = useState<File[]>([]);\r\n\tconst [recentlyUploaded, setRecentlyUploaded] = useState<string[]>([]);\r\n\tconst [uploadProgress, setUploadProgress] = useState(0);\r\n\tconst [currentPage, setCurrentPage] = useState<number>(1);\r\n\tconst [totalPages, setTotalPages] = useState<number>(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoggedIn){\r\n\t\t\tfileService.getFileCount();\r\n\t\t\tfileService.getFiles();\r\n\t\t}\r\n\r\n\t\tconst subscriptions: any[] = [\r\n\t\t\tfileQuery.isLoading$.subscribe((x) => setIsLoading(x)),\r\n\t\t\tfileQuery.error$.subscribe((x) => setError(x)),\r\n\t\t\tfileQuery.files$.subscribe((x) => setFiles(x ?? [])),\r\n\t\t\tfileQuery.recentlyUploaded$.subscribe((x) => setRecentlyUploaded(x ?? [])),\r\n\t\t\tfileQuery.uploadProgress$.subscribe((x) => setUploadProgress(x ?? 0)),\r\n\t\t\tfileQuery.currentPage$.subscribe((x) => setCurrentPage(x)),\r\n\t\t\tfileQuery.totalPages$.subscribe((x) => setTotalPages(x)),\r\n\t\t];\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.map((it) => it.unsubscribe());\r\n\t\t};\r\n\t}, [isLoggedIn]);\r\n\r\n\treturn {\r\n\t\terror,\r\n\t\tisLoading,\r\n\t\tfiles,\r\n\t\trecentlyUploaded,\r\n\t\tuploadProgress,\r\n\t\tcurrentPage,\r\n\t\ttotalPages,\r\n\t};\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\n\r\nimport \"./Dashboard.scss\"\r\nimport { useAuthenticationState, userService } from \"../state/user\";\r\nimport { File, fileService, useFileState } from \"../state/files\";\r\nimport Button from \"../components/Button\";\r\nimport { format } from \"date-fns\";\r\nimport { API_URL } from \"../state/Request\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport Input from \"../components/Input\";\r\n\r\nconst Dashboard = () => {\r\n\tconst history = useHistory();\r\n\tconst [navState, setNavState] = useState(\"files\");\r\n\tconst { currentPage, totalPages, files, isLoading: filesLoading } = useFileState();\r\n\tconst { user, error } = useAuthenticationState();\r\n\r\n\tconst [oldPassword, setOldPassword] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\r\n\tconst copyUrlToClipboard = (file: File) => {\r\n\t\tnavigator.clipboard.writeText(`${API_URL}/${file.name}`);\r\n\t}\r\n\r\n\tconst copyTokenToClipboard = () => {\r\n\t\tnavigator.clipboard.writeText(user?.api_key ?? \"\");\r\n\t}\r\n\r\n\tconst updatePassword = () => {\r\n\t\tuserService.changePassword({\r\n\t\t\tpassword: oldPassword,\r\n\t\t\tnew_password: newPassword,\r\n\t\t});\r\n\t}\r\n\r\n\tconst content = () => {\r\n\t\tswitch (navState) {\r\n\t\t\tcase \"files\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<section className=\"dashboard-files\">\r\n\t\t\t\t\t\t{filesLoading ? (\r\n\t\t\t\t\t\t\t<div className=\"loading\">\r\n\t\t\t\t\t\t\t\t<BounceLoader color={\"#44E384\"} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<section className=\"file-table\">\r\n\t\t\t\t\t\t\t\t<div className=\"table-header\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-name\">Original file name</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-size\">Size</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-date\">Date uploaded</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-link\">Link</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"table-content\">\r\n\t\t\t\t\t\t\t\t\t{files.map((x) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-row\" key={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{x.original_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-size\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{x.file_size > 1000 ? `${(x.file_size / 1000).toFixed(2)} MB` : `${x.file_size} KB`}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-date\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{format(new Date(x.created_at), \"dd MMM HH:mm aaa\")}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"row-link\" small={true} transparent={true} text={\"Copy\"} onClick={() => copyUrlToClipboard(x)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<div className=\"table-nav\">\r\n\t\t\t\t\t\t\t\t<button className={currentPage <= 1 ? \"disabled\" : \"\"} disabled={currentPage <= 1 } onClick={() => fileService.getPreviousPage()}>\r\n\t\t\t\t\t\t\t\t\t<FaArrowLeft color={currentPage <= 1 ? \"#5B5C5E\" : \"#DAE1E7\"} size={18} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\tPage {currentPage}/{totalPages}\r\n\t\t\t\t\t\t\t\t<button className={currentPage >= totalPages ? \"disabled\" : \"\"} disabled={currentPage >= totalPages} onClick={() => fileService.getNextPage()}>\r\n\t\t\t\t\t\t\t\t\t<FaArrowRight color={currentPage >= totalPages ? \"#5B5C5E\" : \"#DAE1E7\"} size={18} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t);\r\n\t\t\tcase \"account\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<section className=\"dashboard-account\">\r\n\t\t\t\t\t\t<Input disabled={true} id={\"username\"} placeholder={user?.username} label={\"Username\"}/>\r\n\t\t\t\t\t\t<Input disabled={true} id={\"email\"} placeholder={user?.email ?? \"\"} label={\"Email\"}/>\r\n\t\t\t\t\t\t<div className=\"token-input\">\r\n\t\t\t\t\t\t\t<Input disabled={true} id={\"token\"} placeholder={user?.api_key} label={\"Api Token\"}/>\r\n\t\t\t\t\t\t\t<Button text={\"Copy\"} className=\"token-copy\" onClick={() => copyTokenToClipboard()}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form className=\"password-update\" onSubmit={() => updatePassword()}>\r\n\t\t\t\t\t\t\t<label className=\"password-update-error\">{error}</label>\r\n\t\t\t\t\t\t\t<label className=\"password-update-success\">{user?.message}</label>\r\n\t\t\t\t\t\t\t<Input id={\"oldpass\"} label={\"Old password\"} type={\"password\"} onChange={(val: string) => setOldPassword(val)}/>\r\n\t\t\t\t\t\t\t<Input id={\"newpass\"} label={\"New Password\"} type={\"password\"} onChange={(val: string) => setNewPassword(val)}/>\r\n\t\t\t\t\t\t\t<Button text={\"Update password\"} type=\"button\" onClick={() => updatePassword()} />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onLogout = () => {\r\n\t\tuserService.logout();\r\n\t\thistory.push(\"home\");\r\n\t\tconsole.info(\"Logged out\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"route\" id=\"dashboard\">\r\n\t\t\t\t<nav className=\"dashboard-menu\">\r\n\t\t\t\t\t<button className=\"menu-item\" onClick={() => setNavState(\"files\")}>Files</button>\r\n\t\t\t\t\t<button className=\"menu-item\" onClick={() => setNavState(\"account\")}>Account</button>\r\n\t\t\t\t\t<button className=\"menu-item\" onClick={onLogout}>Log Out</button>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<section className=\"dashboard-content\">\r\n\t\t\t\t\t{content()}\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport \"./UploadButton.scss\";\r\n\r\ninterface UploadButtonProps {\r\n\tpercentage?: number;\r\n\tonUpload?: (file?: File) => void;\r\n}\r\n\r\nconst UploadButton = (props: UploadButtonProps) => {\r\n\treturn (\r\n\t\t<div className=\"upload-button-wrapper\">\r\n\t\t\t<input type=\"file\" id=\"upload-button\" name=\"files\" style={{display: \"none\"}} onChange={(x) => props.onUpload?.(x.target.files?.[0])} multiple={false} disabled={props.percentage !== 0}/>\r\n\t\t\t<label htmlFor=\"upload-button\" id=\"upload-label\" className=\"upload-label\" {...{\"progress\": \"50px\"}}>\r\n\t\t\t\tClick or drag file to upload\r\n\t\t\t</label>\r\n\t\t\t<div className=\"upload-progress\" style={{width: `${props.percentage ?? 0}%`}}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UploadButton;","import React from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport UploadButton from \"../components/UploadButton\";\r\nimport { fileService, useFileState } from \"../state/files\";\r\nimport { useAuthenticationState } from \"../state/user\";\r\nimport download from \"downloadjs\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst shareXTemplate = {\r\n\t\"Version\": \"1.0\",\r\n\t\"Name\": \"tsuyu\",\r\n\t\"DestinationType\": \"ImageUploader, TextUploader, FileUploader\",\r\n\t\"RequestMethod\": \"POST\",\r\n\t\"RequestURL\": `${process.env.REACT_APP_API_URL}/upload`,\r\n\t\"Headers\": {\r\n\t  \"Authorization\": \"REPLACE_THIS\",\r\n\t},\r\n\t\"Body\": \"MultipartFormData\",\r\n\t\"FileFormName\": \"file\",\r\n\t\"URL\": \"$response$\",\r\n}\r\n\r\nconst Home = () => {\r\n\tconst { isLoggedIn, user } = useAuthenticationState();\r\n\tconst { recentlyUploaded, uploadProgress } = useFileState();\r\n\r\n\tconst downloadShareX = () => {\r\n\t\tconst template = {...shareXTemplate};\r\n\t\tif (user?.api_key){\r\n\t\t\ttemplate.Headers.Authorization = user?.api_key ?? \"\";\r\n\t\t}\r\n\t\tconst blob = new Blob([JSON.stringify(template, null, 2)], {type : 'application/json'});\r\n\t\tdownload(blob, \"tsuyu.sxcu\", \"application/json\");\r\n\t}\r\n\r\n\tconst copyToClipboard = (x: string) => {\r\n\t\tnavigator.clipboard.writeText(x);\r\n\t}\r\n\r\n\tconst onUpload = (file?: File) => {\r\n\t\tif (!file) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfileService.uploadFile(file);\r\n\t};\r\n\r\n\tconst upload = () => {\r\n\t\tif (!isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"interaction-buttons wide\">\r\n\t\t\t\t\t\t<Button text=\"Github\" className=\"button-github\" onClick={() => window.location.href = \"https://github.com/tromodolo/tsuyu\"} />\r\n\t\t\t\t\t\t<Button text=\"ShareX config\" className=\"button-sharex\" onClick={() => downloadShareX()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<UploadButton onUpload={onUpload} percentage={uploadProgress} />\r\n\t\t\t\t{(recentlyUploaded?.length > 0) && <h4>Uploaded files (Last 3)</h4>}\r\n\t\t\t\t{[...recentlyUploaded].reverse().slice(0, 3).map((x) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={x} className=\"recent-file\">\r\n\t\t\t\t\t\t\t<Button text={\"Copy URL\"} onClick={() => copyToClipboard(x)} small={true} />\r\n\t\t\t\t\t\t\t<span>{x.split(`${window.location.host}/`)[1]}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<div className=\"interaction-buttons\">\r\n\t\t\t\t\t<Button text=\"Github\" className=\"button-github\" onClick={() => window.location.href = \"https://github.com/tromodolo/tsuyu\"} />\r\n\t\t\t\t\t<Button text=\"ShareX config\" className=\"button-sharex\" onClick={() => downloadShareX()}/>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"route\" id=\"home\">\r\n\t\t\t\t<section className=\"info\">\r\n\t\t\t\t\t<h1 className=\"title\">tsuyu</h1>\r\n\t\t\t\t\t<h3 className=\"subtitle\">ツユ</h3>\r\n\t\t\t\t\t<p className=\"description\">\r\n\t\t\t\t\t\tFile uploading service.\r\n\t\t\t\t\t\t{/* <br />\t\t\t\t\t\t\r\n\t\t\t\t\t\tFast uploads, sharing and file history, but more to come. */}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className=\"interactions\">\r\n\t\t\t\t\t{upload()}\r\n\t\t\t\t</section>\r\n\t\t\t\t<a className=\"credits\" href=\"https://www.pixiv.net/en/artworks/71865345\">Art source: Hang</a>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {\r\n\tBrowserRouter,\r\n\tSwitch,\r\n\tRoute\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Home from \"./pages/Home\";\r\nimport { useAuthenticationState } from \"./state/user\";\r\n\r\nconst Router = () => {\r\n\tconst { isLoggedIn } = useAuthenticationState();\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/contact\">\r\n\t\t\t\t\t<main className=\"content\">\r\n\t\t\t\t\t\t<Navbar activePage=\"contact\"></Navbar>\r\n\t\t\t\t\t\t<Contact />\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Route>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<Route path=\"/dashboard\">\r\n\t\t\t\t\t\t<main className=\"content\">\r\n\t\t\t\t\t\t\t<Navbar activePage=\"dashboard\"></Navbar>\r\n\t\t\t\t\t\t\t<Dashboard />\r\n\t\t\t\t\t\t</main>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<main className=\"content\">\r\n\t\t\t\t\t\t<Navbar activePage=\"home\"></Navbar>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default Router;","import { persistState } from \"@datorama/akita\";\r\n\r\nexport const InitPersist = () => {\r\n\tpersistState({\r\n\t\tinclude: [\"user\"],\r\n\t});\r\n};\r\n","import React from 'react';\r\nimport Router from './Router';\r\nimport { InitPersist } from './storage';\r\n\r\nInitPersist();\r\n\r\nfunction App() {\r\n  return (\r\n    <Router></Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}